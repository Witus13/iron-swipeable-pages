{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "",
      "summary": "",
      "path": "iron-swipeable-pages.js",
      "properties": [
        {
          "name": "_parentResizable",
          "type": "Object | null | undefined",
          "description": "The closest ancestor element that implements `IronResizableBehavior`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 41,
              "column": 4
            },
            "end": {
              "line": 44,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_parentResizableChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "_notifyingDescendant",
          "type": "boolean | null | undefined",
          "description": "True if this element is currently notifying its descendant elements of\nresize.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 50,
              "column": 4
            },
            "end": {
              "line": 53,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "attrForSelected",
          "type": "string | null | undefined",
          "description": "If you want to use an attribute value or property of an element for\n`selected` instead of the index, set this to the name of the attribute\nor property. Hyphenated values are converted to camel case when used to\nlook up the property of a selectable element. Camel cased values are\n*not* converted to hyphenated values for attribute lookup. It's\nrecommended that you provide the hyphenated form of the name so that\nselection works in both cases. (Use `attr-or-property-name` instead of\n`attrOrPropertyName`.)",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 62,
              "column": 4
            },
            "end": {
              "line": 62,
              "column": 48
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "null",
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "selected",
          "type": "(string | number)",
          "description": "Gets or sets the selected element. The default is to use the index of the\nitem.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 69,
              "column": 4
            },
            "end": {
              "line": 69,
              "column": 42
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "selectedItem",
          "type": "?Object",
          "description": "Returns the currently selected item.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 76,
              "column": 4
            },
            "end": {
              "line": 76,
              "column": 62
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "activateEvent",
          "type": "string | null | undefined",
          "description": "handler immediately changes it back",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 4
            },
            "end": {
              "line": 87,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "null"
        },
        {
          "name": "selectable",
          "type": "string | null | undefined",
          "description": "This is a CSS selector string.  If this is set, only items that match the\nCSS selector are selectable.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 90,
              "column": 4
            },
            "end": {
              "line": 90,
              "column": 22
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "selectedClass",
          "type": "string | null | undefined",
          "description": "The class to set on elements when selected.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 95,
              "column": 4
            },
            "end": {
              "line": 95,
              "column": 57
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"iron-selected\"",
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "selectedAttribute",
          "type": "string | null | undefined",
          "description": "The attribute to set on elements when selected.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 100,
              "column": 4
            },
            "end": {
              "line": 100,
              "column": 50
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "null",
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "fallbackSelection",
          "type": "string | null | undefined",
          "description": "Default fallback if the selection based on selected with\n`attrForSelected` is not found.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 106,
              "column": 4
            },
            "end": {
              "line": 106,
              "column": 50
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "null",
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "items",
          "type": "Array | null | undefined",
          "description": "The list of items from which a selection can be made.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 111,
              "column": 4
            },
            "end": {
              "line": 118,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]",
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "_excludedLocalNames",
          "type": "Object | null | undefined",
          "description": "The set of excluded elements where the key is the `localName`\nof the element that will be ignored from the item list.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 126,
              "column": 4
            },
            "end": {
              "line": 136,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"template\":1,\"dom-bind\":1,\"dom-if\":1,\"dom-repeat\":1}",
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "_shouldUpdateSelection",
          "type": "?",
          "description": " UNUSED, FOR API COMPATIBILITY",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 247,
              "column": 2
            },
            "end": {
              "line": 249,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "padding",
          "type": "number | null | undefined",
          "description": "Add extra padding to the offsetWidth while swiping\nUseful if the element is nested within other elements that enforce a padding",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 4
            },
            "end": {
              "line": 96,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "threshold",
          "type": "number | null | undefined",
          "description": "The value used to decide if a transition is effective and therefore\nif the page get swiped.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 4
            },
            "end": {
              "line": 105,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0.3"
        },
        {
          "name": "noCycle",
          "type": "boolean | null | undefined",
          "description": "Prevent cycling between first and last pages by swiping.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 110,
              "column": 4
            },
            "end": {
              "line": 113,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "carousel",
          "type": "boolean | null | undefined",
          "description": "animate wrap-around between first and last as a direct transition\nlike a carousel. this animation is only used when iron-select is\nfired from something OTHER a swipe. e.g. a call to selectNext()\nlike you might make from a button or an a11y arrow-key binding.\nif false the wrap around flips backwards across all the pages.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 4
            },
            "end": {
              "line": 125,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "transitionDuration",
          "type": "number | null | undefined",
          "description": "The CSS transition duration applied swiping to next/previous page",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 4
            },
            "end": {
              "line": 133,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "250"
        },
        {
          "name": "maximumTransitionDuration",
          "type": "number | null | undefined",
          "description": "The maximum global CSS transition duration applied if swiping involves more than one\npage transition using selection instead of manual swiping.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 139,
              "column": 4
            },
            "end": {
              "line": 142,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "transitionTimingFunction",
          "type": "string | null | undefined",
          "description": "The CSS transition timing function applied.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 150,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"cubic-bezier(0.4, 0.0, 0.2, 1)\""
        },
        {
          "name": "isGesture",
          "type": "boolean | null | undefined",
          "description": "This option could be used for example to check in `on-selected-changed` that\nthe selection was initiated by gesture or via data-binding or programmatically",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 4
            },
            "end": {
              "line": 159,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "edgeSwipeSensitivity",
          "type": "number | null | undefined",
          "description": "How many pixels on the side of the screen are not sensitive to edge swipes.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 4
            },
            "end": {
              "line": 167,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "swipeDisabled",
          "type": "boolean | null | undefined",
          "description": "This option could be used to disable swiping.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 4
            },
            "end": {
              "line": 175,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "This option could also be used to disable swiping. (Warning : it could have side effect on IE, like disable scroll)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 180,
              "column": 4
            },
            "end": {
              "line": 183,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_template",
          "type": "template",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 2
            },
            "end": {
              "line": 69,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        }
      ],
      "methods": [
        {
          "name": "created",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 145,
              "column": 2
            },
            "end": {
              "line": 148,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 150,
              "column": 2
            },
            "end": {
              "line": 153,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 155,
              "column": 2
            },
            "end": {
              "line": 160,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "notifyResize",
          "description": "Can be called to manually notify a resizable and its descendant\nresizables of a resize change.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 87,
              "column": 2
            },
            "end": {
              "line": 99,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "assignParentResizable",
          "description": "Used to assign the closest resizable ancestor to this resizable\nif the ancestor detects a request for notifications.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 105,
              "column": 2
            },
            "end": {
              "line": 117,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "parentResizable"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "stopResizeNotificationsFor",
          "description": "Used to remove a resizable descendant from the list of descendants\nthat should be notified of a resize change.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 123,
              "column": 2
            },
            "end": {
              "line": 130,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "target"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "_subscribeIronResize",
          "description": "Subscribe this element to listen to iron-resize events on the given target.\n\nPreferred over target.listen because the property renamer does not\nunderstand to rename when the target is not specifically \"this\"",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 140,
              "column": 2
            },
            "end": {
              "line": 142,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "target",
              "type": "!HTMLElement",
              "description": "Element to listen to for iron-resize events."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "_unsubscribeIronResize",
          "description": "Unsubscribe this element from listening to to iron-resize events on the\ngiven target.\n\nPreferred over target.unlisten because the property renamer does not\nunderstand to rename when the target is not specifically \"this\"",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 153,
              "column": 2
            },
            "end": {
              "line": 156,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "target",
              "type": "!HTMLElement",
              "description": "Element to listen to for iron-resize events."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "resizerShouldNotify",
          "description": "This method can be overridden to filter nested elements that should or\nshould not be notified by the current element. Return true if an element\nshould be notified, or false if it should not be notified.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 167,
              "column": 2
            },
            "end": {
              "line": 169,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "element",
              "type": "HTMLElement",
              "description": "A candidate descendant element that\nimplements `IronResizableBehavior`."
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if the `element` should be notified of resize."
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "_onDescendantIronResize",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 171,
              "column": 2
            },
            "end": {
              "line": 181,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "_fireResize",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 183,
              "column": 2
            },
            "end": {
              "line": 185,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "_onIronRequestResizeNotifications",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 187,
              "column": 2
            },
            "end": {
              "line": 197,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "_parentResizableChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 199,
              "column": 2
            },
            "end": {
              "line": 203,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "parentResizable"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "_notifyDescendant",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 205,
              "column": 2
            },
            "end": {
              "line": 216,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "descendant"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "_requestResizeNotifications",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 218,
              "column": 2
            },
            "end": {
              "line": 257,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "_findParent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
            "start": {
              "line": 259,
              "column": 2
            },
            "end": {
              "line": 271,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronResizableBehavior"
        },
        {
          "name": "indexOf",
          "description": "Returns the index of the given item.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 169,
              "column": 2
            },
            "end": {
              "line": 171,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object"
            }
          ],
          "return": {
            "desc": "Returns the index of the item"
          },
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "select",
          "description": "Selects the given value.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 179,
              "column": 2
            },
            "end": {
              "line": 181,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "(string | number)",
              "description": "the value to select."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "selectPrevious",
          "description": "Selects the previous item.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 188,
              "column": 2
            },
            "end": {
              "line": 195,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "selectNext",
          "description": "Selects the next item.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 202,
              "column": 2
            },
            "end": {
              "line": 209,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "selectIndex",
          "description": "Selects the item at the given index.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 216,
              "column": 2
            },
            "end": {
              "line": 218,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "index"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "forceSynchronousItemUpdate",
          "description": "Force a synchronous update of the `items` property.\n\nNOTE: Consider listening for the `iron-items-changed` event to respond to\nupdates to the set of selectable items after updates to the DOM list and\nselection state have been made.\n\nWARNING: If you are using this method, you should probably consider an\nalternate approach. Synchronously querying for items is potentially\nslow for many use cases. The `items` property will update asynchronously\non its own to reflect selectable items in the DOM.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 232,
              "column": 2
            },
            "end": {
              "line": 244,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "_checkFallback",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 251,
              "column": 2
            },
            "end": {
              "line": 253,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "_addListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 255,
              "column": 2
            },
            "end": {
              "line": 257,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventName"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "_removeListener",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 259,
              "column": 2
            },
            "end": {
              "line": 261,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventName"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "_activateEventChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 263,
              "column": 2
            },
            "end": {
              "line": 266,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventName"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "_updateItems",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 268,
              "column": 2
            },
            "end": {
              "line": 272,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "_updateAttrForSelected",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 274,
              "column": 2
            },
            "end": {
              "line": 278,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "_updateSelected",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 280,
              "column": 2
            },
            "end": {
              "line": 282,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "_selectSelected",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 284,
              "column": 2
            },
            "end": {
              "line": 301,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selected"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "_filterItem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 303,
              "column": 2
            },
            "end": {
              "line": 305,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "_valueToItem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 307,
              "column": 2
            },
            "end": {
              "line": 309,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "_valueToIndex",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 311,
              "column": 2
            },
            "end": {
              "line": 321,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "_indexToValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 323,
              "column": 2
            },
            "end": {
              "line": 332,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "index"
            }
          ],
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "_valueForItem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 334,
              "column": 2
            },
            "end": {
              "line": 345,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ],
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "_applySelection",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 347,
              "column": 2
            },
            "end": {
              "line": 356,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            },
            {
              "name": "isSelected"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "_selectionChange",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 358,
              "column": 2
            },
            "end": {
              "line": 360,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "_observeItems",
          "description": "observe items change under the given node.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 363,
              "column": 2
            },
            "end": {
              "line": 373,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "_activateHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 375,
              "column": 2
            },
            "end": {
              "line": 387,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "_itemActivate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 389,
              "column": 2
            },
            "end": {
              "line": 396,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "item"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 201,
              "column": 2
            },
            "end": {
              "line": 204,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onItemsChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 208,
              "column": 2
            },
            "end": {
              "line": 216,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_addPage",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 218,
              "column": 2
            },
            "end": {
              "line": 224,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "page"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_removePage",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 226,
              "column": 2
            },
            "end": {
              "line": 231,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "page"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onFallbackSelectionChange",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 233,
              "column": 2
            },
            "end": {
              "line": 240,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onDomChange",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 242,
              "column": 2
            },
            "end": {
              "line": 246,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onTrack",
          "description": "Element tracking",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 249,
              "column": 2
            },
            "end": {
              "line": 273,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_isSwipeDisabled",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 275,
              "column": 2
            },
            "end": {
              "line": 277,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_trackStart",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 279,
              "column": 2
            },
            "end": {
              "line": 289,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "trackData"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_trackMove",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 291,
              "column": 2
            },
            "end": {
              "line": 294,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "trackData"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_trackEnd",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 296,
              "column": 2
            },
            "end": {
              "line": 321,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "trackData"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_preventTouchMove",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 323,
              "column": 2
            },
            "end": {
              "line": 325,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_onIronDeselectItem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 327,
              "column": 2
            },
            "end": {
              "line": 334,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onIronSelectItem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 336,
              "column": 2
            },
            "end": {
              "line": 432,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setUpSwipePages",
          "description": "Element page management",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 435,
              "column": 2
            },
            "end": {
              "line": 470,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_initPage",
          "description": "prepare the page for animation and add it to the list of pages to be animated",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 473,
              "column": 2
            },
            "end": {
              "line": 483,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "page"
            },
            {
              "name": "transition"
            },
            {
              "name": "left"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_animatePages",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 485,
              "column": 2
            },
            "end": {
              "line": 489,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "x"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_switchPageIfNecessary",
          "description": "on the left/right side depending on the direction of the swipe given with `dx`",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 493,
              "column": 2
            },
            "end": {
              "line": 498,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dx"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_selectPage",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 500,
              "column": 2
            },
            "end": {
              "line": 503,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "page"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resetPage",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 505,
              "column": 2
            },
            "end": {
              "line": 512,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "page"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resetPages",
          "description": "remove the iron-swiping class and transition",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 515,
              "column": 2
            },
            "end": {
              "line": 527,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onTransitionEnd",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 529,
              "column": 2
            },
            "end": {
              "line": 532,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_canCycle",
          "description": "Element utility functions",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 535,
              "column": 2
            },
            "end": {
              "line": 545,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "trackData"
            }
          ]
        },
        {
          "name": "_getOffsetWidth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 547,
              "column": 2
            },
            "end": {
              "line": 550,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onResize",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 552,
              "column": 2
            },
            "end": {
              "line": 554,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeTransition",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 556,
              "column": 2
            },
            "end": {
              "line": 562,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "factor"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 68,
          "column": 8
        },
        "end": {
          "line": 563,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "attr-for-selected",
          "description": "If you want to use an attribute value or property of an element for\n`selected` instead of the index, set this to the name of the attribute\nor property. Hyphenated values are converted to camel case when used to\nlook up the property of a selectable element. Camel cased values are\n*not* converted to hyphenated values for attribute lookup. It's\nrecommended that you provide the hyphenated form of the name so that\nselection works in both cases. (Use `attr-or-property-name` instead of\n`attrOrPropertyName`.)",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 62,
              "column": 4
            },
            "end": {
              "line": 62,
              "column": 48
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "selected",
          "description": "Gets or sets the selected element. The default is to use the index of the\nitem.",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 69,
              "column": 4
            },
            "end": {
              "line": 69,
              "column": 42
            }
          },
          "metadata": {},
          "type": "(string | number)",
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "selected-item",
          "description": "Returns the currently selected item.",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 76,
              "column": 4
            },
            "end": {
              "line": 76,
              "column": 62
            }
          },
          "metadata": {},
          "type": "?Object",
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "activate-event",
          "description": "handler immediately changes it back",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 4
            },
            "end": {
              "line": 87,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "selectable",
          "description": "This is a CSS selector string.  If this is set, only items that match the\nCSS selector are selectable.",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 90,
              "column": 4
            },
            "end": {
              "line": 90,
              "column": 22
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "selected-class",
          "description": "The class to set on elements when selected.",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 95,
              "column": 4
            },
            "end": {
              "line": 95,
              "column": 57
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "selected-attribute",
          "description": "The attribute to set on elements when selected.",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 100,
              "column": 4
            },
            "end": {
              "line": 100,
              "column": 50
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "fallback-selection",
          "description": "Default fallback if the selection based on selected with\n`attrForSelected` is not found.",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 106,
              "column": 4
            },
            "end": {
              "line": 106,
              "column": 50
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "items",
          "description": "The list of items from which a selection can be made.",
          "sourceRange": {
            "file": "../@polymer/iron-selector/iron-selectable.js",
            "start": {
              "line": 111,
              "column": 4
            },
            "end": {
              "line": 118,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined",
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "name": "padding",
          "description": "Add extra padding to the offsetWidth while swiping\nUseful if the element is nested within other elements that enforce a padding",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 4
            },
            "end": {
              "line": 96,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "threshold",
          "description": "The value used to decide if a transition is effective and therefore\nif the page get swiped.",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 4
            },
            "end": {
              "line": 105,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "no-cycle",
          "description": "Prevent cycling between first and last pages by swiping.",
          "sourceRange": {
            "start": {
              "line": 110,
              "column": 4
            },
            "end": {
              "line": 113,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "carousel",
          "description": "animate wrap-around between first and last as a direct transition\nlike a carousel. this animation is only used when iron-select is\nfired from something OTHER a swipe. e.g. a call to selectNext()\nlike you might make from a button or an a11y arrow-key binding.\nif false the wrap around flips backwards across all the pages.",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 4
            },
            "end": {
              "line": 125,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "transition-duration",
          "description": "The CSS transition duration applied swiping to next/previous page",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 4
            },
            "end": {
              "line": 133,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "maximum-transition-duration",
          "description": "The maximum global CSS transition duration applied if swiping involves more than one\npage transition using selection instead of manual swiping.",
          "sourceRange": {
            "start": {
              "line": 139,
              "column": 4
            },
            "end": {
              "line": 142,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "transition-timing-function",
          "description": "The CSS transition timing function applied.",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 150,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "is-gesture",
          "description": "This option could be used for example to check in `on-selected-changed` that\nthe selection was initiated by gesture or via data-binding or programmatically",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 4
            },
            "end": {
              "line": 159,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "edge-swipe-sensitivity",
          "description": "How many pixels on the side of the screen are not sensitive to edge swipes.",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 4
            },
            "end": {
              "line": 167,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "swipe-disabled",
          "description": "This option could be used to disable swiping.",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 4
            },
            "end": {
              "line": 175,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "This option could also be used to disable swiping. (Warning : it could have side effect on IE, like disable scroll)",
          "sourceRange": {
            "start": {
              "line": 180,
              "column": 4
            },
            "end": {
              "line": 183,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "iron-activate",
          "description": "Fired when iron-selector is activated (selected or deselected).\nIt is fired before the selected items are changed.\nCancel the event to abort selection.",
          "metadata": {},
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "iron-deselect",
          "description": "Fired when an item is deselected",
          "metadata": {},
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "iron-items-changed",
          "description": "Fired when the list of selectable items changes (e.g., items are\nadded or removed). The detail of the event is a mutation record that\ndescribes what changed.",
          "metadata": {},
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "iron-select",
          "description": "Fired when an item is selected",
          "metadata": {},
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "selected-changed",
          "description": "Fired when the `selected` property changes.",
          "metadata": {},
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "selected-item-changed",
          "description": "Fired when the `selectedItem` property changes.",
          "metadata": {},
          "inheritedFrom": "IronSelectableBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "items-changed",
          "description": "Fired when the `items` property changes.",
          "metadata": {},
          "inheritedFrom": "IronSelectableBehavior"
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "iron-swipeable-pages"
    }
  ]
}
